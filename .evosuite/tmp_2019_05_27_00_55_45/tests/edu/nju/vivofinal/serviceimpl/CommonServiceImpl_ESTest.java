/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 17:18:27 GMT 2019
 */

package edu.nju.vivofinal.serviceimpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nju.vivofinal.serviceimpl.CommonServiceImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CommonServiceImpl_ESTest extends CommonServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CommonServiceImpl commonServiceImpl0 = new CommonServiceImpl();
      String string0 = commonServiceImpl0.generateRandomCode(8);
      assertEquals("10000000", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CommonServiceImpl commonServiceImpl0 = new CommonServiceImpl();
      String string0 = commonServiceImpl0.generateRandomCode(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CommonServiceImpl commonServiceImpl0 = new CommonServiceImpl();
      // Undeclared exception!
      try { 
        commonServiceImpl0.generateRandomCode(840);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
