/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun May 26 17:01:40 GMT 2019
 */

package edu.nju.vivofinal.daoimpl;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ParentInfoDaoImpl_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "edu.nju.vivofinal.daoimpl.ParentInfoDaoImpl"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "GBK"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\dell\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "CN"); 
    java.lang.System.setProperty("user.dir", "G:\\vivo\\VIVOFinal"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\dell"); 
    java.lang.System.setProperty("user.language", "zh"); 
    java.lang.System.setProperty("user.name", "dell"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader() ,
      "org.hibernate.query.CommonQueryContract",
      "org.springframework.data.domain.ExampleMatcher$PropertySpecifier",
      "org.hibernate.SynchronizeableQuery",
      "org.hibernate.stat.SessionStatistics",
      "org.hibernate.query.QueryProducer",
      "org.hibernate.jpa.HibernateEntityManagerFactory",
      "org.hibernate.Filter",
      "org.hibernate.SQLQuery",
      "org.springframework.beans.factory.annotation.Autowired",
      "org.hibernate.resource.transaction.spi.TransactionStatus",
      "edu.nju.vivofinal.model.Parent",
      "org.springframework.data.domain.ExampleMatcher$MatchMode",
      "org.hibernate.Transaction",
      "org.hibernate.LobHelper",
      "org.hibernate.SharedSessionBuilder",
      "org.hibernate.query.Query",
      "org.hibernate.Query",
      "org.springframework.stereotype.Repository",
      "org.hibernate.SessionBuilder",
      "org.hibernate.query.ParameterMetadata",
      "org.hibernate.NaturalIdLoadAccess",
      "org.hibernate.LockOptions",
      "org.hibernate.ScrollableResults",
      "org.hibernate.SessionFactory",
      "edu.nju.vivofinal.dao.ParentInfoDao",
      "org.hibernate.CacheMode",
      "org.springframework.data.domain.ExampleMatcher$NoOpPropertyValueTransformer",
      "org.hibernate.criterion.CriteriaSpecification",
      "org.hibernate.ScrollMode",
      "org.hibernate.SharedSessionContract",
      "org.hibernate.HibernateException",
      "edu.nju.vivofinal.daoimpl.ParentInfoDaoImpl",
      "org.hibernate.Criteria",
      "org.hibernate.TypeHelper",
      "org.hibernate.SessionEventListener",
      "org.hibernate.Session",
      "org.hibernate.SimpleNaturalIdLoadAccess",
      "org.springframework.data.domain.ExampleMatcher$PropertySpecifiers",
      "org.hibernate.MultiIdentifierLoadAccess",
      "org.hibernate.query.NativeQuery",
      "org.hibernate.Query$1",
      "edu.nju.vivofinal.model.Teacher",
      "org.hibernate.procedure.ProcedureCall",
      "edu.nju.vivofinal.dao.TeacherInfoDao",
      "org.hibernate.LockMode",
      "org.hibernate.Session$LockRequest",
      "org.hibernate.jpa.HibernateEntityManager",
      "org.hibernate.FlushMode",
      "org.hibernate.query.Query$1",
      "org.springframework.data.domain.ExampleMatcher",
      "org.hibernate.engine.spi.RowSelection",
      "org.hibernate.jdbc.Work",
      "org.springframework.data.domain.ExampleMatcher$PropertyValueTransformer",
      "edu.nju.vivofinal.model.ExamScore",
      "org.springframework.stereotype.Component",
      "edu.nju.vivofinal.dao.BaseDao",
      "org.hibernate.BasicQueryContract",
      "org.hibernate.UnknownProfileException",
      "org.hibernate.query.QueryParameter",
      "org.hibernate.IdentifierLoadAccess",
      "org.hibernate.ReplicationMode",
      "org.hibernate.type.Type",
      "org.hibernate.transform.ResultTransformer",
      "org.hibernate.jdbc.ReturningWork"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("edu.nju.vivofinal.dao.BaseDao", false, ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("edu.nju.vivofinal.dao.TeacherInfoDao", false, ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.hibernate.Session", false, ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.hibernate.Transaction", false, ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.hibernate.query.Query", false, ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ParentInfoDaoImpl_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "edu.nju.vivofinal.daoimpl.ParentInfoDaoImpl",
      "edu.nju.vivofinal.model.Parent",
      "edu.nju.vivofinal.model.Teacher",
      "org.springframework.data.domain.ExampleMatcher$NoOpPropertyValueTransformer",
      "org.hibernate.Query$1",
      "org.hibernate.Query",
      "org.hibernate.query.Query$1",
      "org.hibernate.query.Query",
      "edu.nju.vivofinal.model.ExamScore",
      "com.mysql.jdbc.AbandonedConnectionCleanupThread$1",
      "com.mysql.jdbc.AbandonedConnectionCleanupThread",
      "com.mysql.jdbc.NonRegisteringDriver",
      "com.mysql.jdbc.Driver",
      "com.mysql.fabric.jdbc.FabricMySQLDriver",
      "org.hsqldb.jdbc.JDBCDriver"
    );
  }
}
